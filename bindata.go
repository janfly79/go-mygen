// Code generated by go-bindata. (@generated) DO NOT EDIT.

// Package main generated by go-bindata.// sources:
// assets/tpl/curd.go
// assets/tpl/curd.tpl
// assets/tpl/curd.tpl2
// assets/tpl/curd.tpl_copy
// assets/tpl/e.tpl
// assets/tpl/entity.tpl
// assets/tpl/entity.tpl_copy
// assets/tpl/example.tpl
// assets/tpl/init.tpl
// assets/tpl/markdown.tpl
// assets/tpl/tables.tpl
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsTplCurdGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6b\x6b\xdc\xd8\x19\xfe\x3c\xfa\x15\x6f\xc5\x62\xa4\x78\xd0\xb8\xeb\xd2\x0f\x81\x49\xb0\x67\xc6\xc9\x50\x5f\x12\x8f\xdc\x52\x4c\x30\x1a\xe9\x8c\xa3\x5a\x97\x99\xa3\x33\xf6\x18\x21\xc8\x42\xcb\x26\xb0\xd9\xee\x87\x26\xbb\x6c\x43\xdb\x2c\xbb\x65\x29\x64\x93\x0f\x2d\xdd\x0f\x85\xfe\x99\xcc\x6c\x7e\x46\x39\x17\xc9\x1a\xcd\x4d\x9a\x38\xdd\xb4\x38\x10\x6c\xeb\xf2\xbe\xaf\x9e\xe7\x79\x2f\x47\x47\xe4\xbc\x8b\x20\x0c\xb5\x16\xc1\x7d\x93\xe8\x46\xdb\x41\xbb\x86\x8b\xa2\x68\xc7\xb7\x90\x03\x01\x3b\x0c\xa1\xd4\x90\xea\x9b\x70\x2d\xe8\x39\x5a\x7d\x53\xd2\x07\xfc\x57\x7d\x20\x45\x92\x54\xa9\x80\xe7\x13\x20\xd8\xf0\x02\xc3\x24\xb6\xef\x49\x9d\xbe\x67\xc2\x2e\x3a\x9b\x66\x58\xb1\xda\xa0\x69\x9a\xb0\xa5\xc2\xb5\xd9\xde\x43\xc9\xee\x80\x83\x3c\xc5\x6a\xab\x70\x03\xd6\x20\x94\x30\x22\x7d\xec\xc1\xca\xcc\x9b\x42\xa9\xbe\x79\x1d\xac\xf6\xe1\xda\xbd\xb2\x14\x49\x51\xde\x3b\x5c\x23\x20\x08\xd7\x37\xf9\x4d\x95\x4a\xfa\x79\xc0\x6f\xff\x06\x99\x64\xee\x63\xe9\x03\x85\x24\xb0\x2c\x78\xaa\x1c\x21\xe9\x83\xeb\x40\x06\x3c\x18\xf6\xaf\x52\x81\x37\x9f\xfe\x73\xf8\xfb\xa7\xa3\x47\x0f\x46\xcf\x1e\xfd\xf0\xe5\x6f\xdf\x3c\xff\x76\xf8\xe2\xf3\xd1\x77\xff\xe0\x71\x29\xee\x1c\xa7\x2a\x1c\x23\x52\xf3\x9d\xbe\xeb\x05\x8a\x4a\x69\xb5\xbd\xe3\x8b\x48\x64\x2a\x81\x0d\xc7\xd9\xb2\x91\x63\x6d\xdb\x01\x89\x22\x90\x05\xb7\xdc\xeb\xf0\xeb\x2f\xdf\x3c\xff\x64\xf4\xe4\xd5\xe8\xf1\x77\x5a\x5e\x87\xfb\xfe\x59\xa0\x04\x3d\x47\x1f\x10\xe1\xb2\x0c\x5d\x03\x1b\x6e\x40\x15\x60\x7b\x04\xe1\x8e\x61\xa2\x30\x52\x41\xc1\xfe\x59\xb0\x8f\x82\xbe\x43\xe0\xf0\x1e\xb5\x7b\xe7\xe4\xb8\xe1\x11\x9b\x9c\x47\xd1\x34\x2f\x65\x40\x18\xd3\xff\x3e\x56\x21\x94\x7a\x7d\x84\xcf\xf9\xb1\xeb\x55\x70\xb5\xfa\xa6\x76\x97\x1e\x12\xee\x63\xbf\x9a\xa6\xa9\x54\x54\xf4\xba\x9f\x54\xc1\xb3\x29\x1d\xf4\x0f\x7a\x4f\x43\x6b\x11\xc3\x3c\x51\x10\xc6\xaa\x40\x46\x8a\x24\x0b\x75\x10\x06\x66\x5f\xab\x39\x7e\x80\x14\x55\xea\xf8\xf1\x91\x5d\x34\x20\x0a\x0d\x00\xfb\x67\xd4\xf3\x44\xe0\xbb\x7d\xc7\x99\x08\x3e\x8c\x84\x53\x6e\xa4\x65\x1a\x9e\x22\x85\x21\x36\xbc\x63\x04\xec\x16\xc6\x44\xd0\xf4\x3a\x7e\x14\xad\x60\xff\x4c\x0b\x43\xed\x76\xdf\xed\x8a\x87\xaf\x54\xa8\xa7\x9a\xef\xba\xc8\x23\x51\x24\x85\x21\xf2\xac\x28\x2a\xfa\x6c\x29\xd0\xab\x60\x74\xbb\xc8\xb3\x52\x44\x94\x99\x42\x17\xf0\x10\xce\x8e\x3b\x0c\x69\x34\x3d\xd0\x6e\xf9\x3a\x2d\x33\x72\xc7\xf1\x0d\xf2\xf3\x9f\xc9\xcc\xd2\xc5\xd3\x5c\x9f\x78\x3e\x6d\x8b\x5f\x39\xed\x39\x9d\x00\x41\xc6\xae\xed\xe5\xb3\xda\xf4\xf2\xdb\x24\xb6\x8b\x34\xdd\x76\x51\x0e\xbb\xf4\xb2\xfc\xa1\xae\x7f\x98\x2f\xd4\xf5\x0f\x67\xd8\x5c\x7c\x77\x8b\x27\xdb\x0c\x95\x88\x1f\x91\x9a\x54\xc7\xf1\x54\x7f\xfc\x24\x49\xf5\x02\x99\xce\x32\x0d\xe5\xcb\x74\xa1\xb9\x25\xd3\x7c\x3c\xc3\x53\xae\xc7\xb2\xfc\x7f\x35\x21\x93\x7c\xfc\xd1\x93\x0f\xae\xb2\xef\x1d\x66\xdf\x78\xea\x1d\x8d\xfe\xf8\xf7\xd1\xd3\x57\x05\xb2\xae\x65\x9c\xa2\x6c\x73\x3d\x35\x9c\x3e\x9a\xcc\xb8\x36\xb4\x7d\xdf\xc9\xa4\x52\x40\x5c\x32\xde\x30\xef\x60\xd4\x35\x70\x6c\x74\xb9\x3e\x49\xad\x26\x6d\x12\x8b\x36\x22\x9c\xb0\x73\x8d\x01\x32\x15\x16\xe7\x12\xbd\xf8\xd4\xc0\x60\x74\x3a\xc8\x24\x35\xbf\xef\x11\x60\xd2\x93\x52\x47\xb8\xaf\x2a\x70\xcf\x1a\x1d\x40\x36\xd8\x59\x64\x29\x45\x9d\xb5\x69\x4f\x4c\x39\xbb\x01\x6b\x29\xce\x96\x27\x4d\x1f\x5c\x22\x6d\xfa\xe0\x8a\xb6\x22\xb4\x55\x2a\xb0\x61\x59\x9c\xab\x0d\xcb\x52\x4c\x32\x00\xd3\xf7\x08\x1a\x10\xad\xc6\x7f\xc6\x7c\xe4\xe8\x4e\xaa\xe2\x18\x01\x69\x5a\xfc\x89\xb2\x4c\xf5\x1c\x0a\x9f\xdc\xdc\x6d\x35\xf6\x75\x68\xee\xea\x7b\x20\xc3\x2a\x2d\x0a\x29\x13\xb0\x0a\x32\x28\x61\xa8\x35\xbd\x00\x61\x92\x9a\xc0\x55\xf8\xe5\xc6\xf6\x41\xa3\x95\x3a\xbb\x63\xe0\x93\x28\x52\x65\xc9\xf4\x3d\x8f\x1a\xb7\xda\xda\x2d\x44\xe8\x53\x94\x41\x36\x7d\xd7\x36\x65\x55\xea\x89\x33\xad\xbb\xdb\xfc\x36\x45\x5e\xe5\xcf\xc2\xfc\x46\xd1\xaa\x5c\x86\xa0\xe7\x30\xa6\x13\x9a\xa9\x49\x46\xb3\x80\x81\x19\xbd\xe8\x2f\xdc\x12\xef\x2d\x5c\x07\x4b\x36\xc0\x84\x0b\xbb\x0c\x47\x9c\x73\x6d\x9b\xa2\xc8\x1d\x58\x8a\x3a\x4e\x57\x1d\x39\x9c\xae\x3a\x72\xa6\xd3\x75\x76\x1f\x61\x94\x24\x93\x81\x8f\x03\x38\xbc\x37\x9e\x4a\x63\xc4\x94\x62\x66\x2c\xe4\x20\x82\xa0\x83\x7d\x77\x3a\x33\xcc\xb2\x54\x9a\x8b\x76\x29\x05\x77\x9d\x19\x54\xe4\x49\x53\x31\xe2\x52\xe9\x28\x16\xbb\x39\x81\x36\xf4\xca\x60\x5b\xf4\xa2\x2c\x68\xa5\x92\xc0\xa4\x24\x16\x84\x95\x0a\x8c\x9e\xbe\x1a\x7e\xf5\xa7\xd7\xff\x7e\x3e\xfa\xe8\x65\xae\xe2\x53\xc3\xc8\x20\x68\x7d\x7d\x5d\xc9\x2f\x70\x98\xa7\x70\xd3\xf7\x02\x02\xf1\xdc\x37\x5d\xea\x17\xaa\x0b\x43\xed\xa0\xdb\x45\xf8\xad\xc5\x3f\xbf\x73\xa1\x77\x5b\x03\xdf\x41\x46\xcc\x0f\x8e\xe3\x9f\xa9\x90\x99\x84\x29\x38\x64\xa6\xd3\x2b\xad\x22\x20\x83\x02\x42\xd2\x07\xff\x5f\x3a\xca\xb4\xd2\x2b\x1d\xe5\xd7\xd1\xd5\xea\xf1\x6a\xf5\x78\xb5\x7a\xfc\xf1\x56\x8f\xc7\x48\xbc\x9c\x16\xe3\xc9\xe4\x8c\x94\x4d\xaf\xec\x94\xc4\x33\xab\x68\x4e\x85\x05\x66\xa3\x16\x72\x90\x49\x66\xcf\x46\xbc\xe0\x4a\x25\x33\x49\xcc\xec\x68\x44\x63\xa6\xc9\x29\x12\xac\x54\x7a\x9b\x14\xa3\x77\x8b\x24\x2b\x95\xd4\xf9\x13\x57\x52\xe2\xfa\x5d\xcb\x20\x88\x43\x7d\xc0\x7e\x9f\x8e\x76\x87\xc5\x92\x80\x5d\x68\x40\x4d\xcd\xa7\xdc\xdd\xac\x45\x43\x80\x08\x3d\x25\x95\x4a\xc2\x1d\x3d\x28\x2f\x31\xb5\x2e\x62\x46\x5d\x38\xb4\xc6\xcc\x2c\x1c\x5c\x19\x72\xb4\x33\x5f\xc2\x24\x1f\x8f\xc1\x45\xd7\xe0\x82\xb8\x22\xb3\xcb\xd4\x95\xf8\xc4\xd4\x72\x70\xa7\xbe\xa1\x37\xf2\x0f\x2c\xad\x86\x0e\xec\x1c\x8d\x27\xbd\xf5\xf2\xab\xdb\x8d\xfd\x06\xb3\x81\x6d\xd7\xc0\xe7\xbf\x40\xe7\x51\x04\x55\xb8\x29\x4b\xa2\x2d\xd2\x1e\x66\x9c\x20\x65\x0c\x9d\x32\xac\xa9\x49\x49\xff\xc0\x2e\xc3\x07\xa7\x06\x13\x92\x70\x41\xad\x33\x37\x51\x24\xcc\x24\x2f\xfd\xf9\xdf\x65\x08\x43\x7a\x0f\x4d\x0a\x91\x1d\xf1\x0e\x91\xab\x25\xef\x9b\xb2\xad\x32\x9a\xe4\x21\xef\x20\xc9\xe3\x2a\x38\x48\x5e\x91\xc1\xc9\x10\xef\x91\x66\xd1\xf1\xe7\x6f\xde\xbc\xfc\x2a\xbd\x6d\x97\x8b\x91\x2d\xdb\xb3\x14\xda\x0c\x50\x40\x23\x5c\x6a\x2f\x2e\x66\x81\x96\xb0\x56\x63\xbb\x51\xd3\x29\x0b\xae\x36\xb6\x05\xb9\x0a\xf2\xd6\xfe\xde\x4e\x2e\x82\x24\x11\x4d\x5c\x84\x98\xa9\x64\x73\x91\xf5\x8d\xcb\xd8\xc7\xd8\xb2\x71\x40\x14\x5b\xac\x51\x38\x08\xcb\x0d\x9a\x97\x8e\x00\x93\xe8\x4c\x25\xc2\x76\x73\xa7\xa9\xc3\x4f\xe5\xb1\xe5\xc6\x05\x4e\x17\x3a\xb1\xad\xa9\x50\x8d\x9e\x3d\x18\x7e\xf6\xe9\xeb\xef\x1f\x14\x03\x8c\xae\x1e\x94\xf7\x0f\xa7\xbd\xfd\x7a\x63\x1f\x36\x7f\x0d\xcd\x3a\xd4\x1b\xad\x5a\x5e\x78\x32\xd0\x0c\x1f\x3f\x19\x3e\xfc\xbc\x00\x1c\x77\x9c\xbe\x79\x32\x45\x3f\xae\xd1\x3d\x64\x87\xc6\xeb\xc3\xfc\xfa\xc5\xe1\xc8\xb2\x5d\x66\xdf\x6a\x20\xd3\xf7\x2c\x51\x3c\xa0\x18\x36\xbc\xc3\x4e\xad\x66\xd8\x3f\x0b\x66\xed\xa0\x27\xe2\x59\x66\x41\x4c\x0d\x67\x16\xc4\x20\x4a\xe6\x54\x68\x54\xf6\xc2\x58\x91\x8e\x62\x28\xa5\x23\x5a\x3b\x53\x57\x48\x7c\x0b\x9e\x19\x4e\x76\xe0\xc5\xc2\x96\x1e\x63\x03\xe2\xca\x91\x6d\x95\x61\x85\xde\x5b\x7c\x65\x4b\x83\x3c\x3c\xb2\xad\x7b\x50\x05\x6a\x21\xfb\xda\x24\x2d\x0e\x68\x9f\xc3\xe8\x0f\x2f\x47\x9f\x7c\x34\x7c\xf8\xf1\x0f\x8f\x3e\x7e\xfd\xaf\xbf\x0c\x7f\xf7\x0d\xbd\xea\x16\x22\x60\x32\x21\x83\x65\x10\x23\xbf\x8a\x02\xc5\xb6\xc4\xec\x53\x54\x49\xb9\x00\x16\xdf\xd5\xd8\x56\xa0\x42\xb5\x9a\xfa\xb2\x46\x8a\xa6\x24\xe5\x3b\x52\x21\x1d\x5e\xe5\xac\x14\x6d\x0f\x14\x6a\x67\x1f\x75\x91\x41\xee\xf6\x51\x40\x6c\xdf\xdb\x31\xf0\x89\x12\x47\xcc\x4a\x82\xba\xa8\xfd\x26\x57\x33\xa9\xd8\xd6\x80\x0a\x98\x5e\xcc\x5b\x32\xc5\x37\x14\x26\x0e\x6d\x6b\x40\x89\xb6\x2d\xf1\x4d\xc4\xdc\x34\x78\xcb\x2f\x49\xc6\xb2\xe1\xfd\x17\x7a\xd2\x4b\x5f\x7f\xff\x37\x51\x0b\x85\xb0\x7d\x0f\xe5\x57\xf5\x9e\x87\xa6\x54\xc6\x19\xdb\x26\x0b\xe4\x77\x19\x25\xaf\x7a\x53\x4e\xa0\x99\xfa\x2e\xc8\xb6\xc4\x3a\x73\x85\xc7\x9a\x45\x76\x65\x25\xfe\x2b\xe8\x39\x5a\x03\xe3\x5d\x9f\x4e\x24\xc5\x5e\xbe\x72\x70\x79\xd3\x8d\x61\x75\x6c\x0f\x81\xe9\xf7\x3d\x92\xef\x5d\x2c\xbd\x92\x36\x61\xf3\x62\x6b\x6d\x31\xa2\xb5\xbd\x83\x5d\x5d\xb9\xa6\xe6\x87\x72\x1e\x5a\x31\x52\x2c\x84\x9c\x40\x15\xc2\x69\xf8\xf0\xeb\xd1\xd3\x17\x5c\x7e\xa3\x2f\x5e\x0e\x3f\xfb\xeb\xf0\xc5\x17\xc3\x67\xdf\xd2\x73\xb5\xfb\xc8\x3c\x01\x72\x9f\x8b\x11\xec\x00\xee\x1b\xa7\xe8\x66\x2e\xf0\x6e\x1b\x41\x5a\x95\xd3\x37\x5c\xff\x2b\x7a\xe4\x2d\x98\x96\x83\x14\x8f\x79\x15\x5a\x04\xf7\x9c\x02\x15\x61\xdc\x80\xb5\x32\xb5\x26\x45\xff\x09\x00\x00\xff\xff\xc6\x8e\x45\xf0\x29\x2a\x00\x00")

func assetsTplCurdGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplCurdGo,
		"assets/tpl/curd.go",
	)
}

func assetsTplCurdGo() (*asset, error) {
	bytes, err := assetsTplCurdGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/curd.go", size: 10793, mode: os.FileMode(420), modTime: time.Unix(1608606680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplCurdTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xcf\x6b\xdb\x48\x14\x3e\xcb\xe0\xff\xe1\xad\x0e\x41\xda\x08\x19\x76\x97\x3d\x64\xf1\x21\xeb\x78\x77\x0d\x5e\x2f\x89\x9d\xbd\x84\x10\x14\xe9\x39\x15\x95\x67\xec\xd1\xa8\x76\x11\x82\x1e\x43\xa1\xed\x29\x29\xa5\x14\x12\xe8\xa1\xa7\x92\x43\x21\x87\xd0\x3f\xc7\x26\xfd\x2f\xca\x68\xc6\xf1\x24\x91\x13\xd7\x29\x55\x08\x46\x9e\x1f\xdf\xf7\xbe\xf7\xbd\xf7\x5c\x2e\xf9\x94\xc4\x1c\xac\x72\x09\x00\x20\x4d\xdd\x36\x67\x89\xcf\x3b\xde\x7e\x84\x2d\xaf\x87\x59\xb6\xb7\xf1\x27\x54\xc1\xf4\x69\x2f\xf4\xcd\x72\xc9\x2e\x97\xf4\xbf\x4a\x05\x26\xe7\x17\xe3\xe7\x27\xe5\x52\x37\x21\x3e\xac\x07\x81\xe5\xf3\x11\xf8\x94\x70\x1c\x71\xb7\x26\x3f\x1d\x78\xe2\x45\x09\x16\x02\xd8\x56\xe4\xc5\xbc\x11\x40\x48\xf8\xef\xbf\x39\x80\x8c\x89\x7f\xca\x6c\x48\x25\x2d\x9f\x12\x02\x6b\x55\x08\xf6\xdd\xbf\x91\x8b\xfb\x9d\x29\x21\x5b\xee\x88\x07\x91\xd8\x60\x36\x5a\xed\xfa\x56\x07\x1a\xad\xce\x7f\x02\x4b\x43\x01\x2b\x4d\xdd\x06\x89\x91\xf1\xbf\x42\x8c\x82\x66\x18\xf3\x2c\xb3\xc1\x84\x55\x79\x85\x78\xcc\xff\xd7\x9b\xdb\xf5\xb6\xb6\xf7\x5f\x8f\x3d\xce\x32\xdb\x94\x7b\x06\x8a\x45\x7b\xb3\x29\x97\x2d\xf3\x3a\x8a\xe9\x08\x2a\x8a\x14\xc3\x58\x46\xb3\x56\xcd\x43\x70\xeb\x23\xf4\x95\x20\x32\x88\x81\x33\xc3\x4e\x53\xe6\x91\x03\x04\x05\xdc\x20\x5d\x9a\x65\xb9\x6a\x6e\x9a\xba\xff\x24\xbd\xbe\x84\x70\x2a\x15\x11\x5a\x8d\xf6\x7a\x48\x78\x96\xe9\x37\x20\x09\xb2\x4c\xa1\x87\xdd\x1c\xfb\xa7\x2a\x90\x30\x9a\x2a\x29\x69\xf1\x84\x11\xf9\xae\x4e\xcb\x04\x38\xb0\x07\x55\xc1\xda\x6d\x8a\x77\x49\x23\xb0\xae\xa2\x91\xc7\x32\x95\xf6\xf1\xe1\xc9\x97\x37\xef\xc7\x2f\x8e\x26\xef\x4e\x2f\x3f\x9e\x8d\x3f\x1f\x29\x0b\x6c\x60\x54\x6c\x81\xe1\x23\x64\x08\x31\x67\x21\x39\x70\xc0\x63\x07\x31\xec\xec\x86\x84\x23\xeb\x7a\x3e\xa6\x99\x0d\xd6\xb7\xe6\xde\x98\x26\x3e\xc0\x08\x39\x42\x97\xd1\xde\xcd\xc4\x9b\xb0\x2a\xa1\xcb\x25\x43\x4b\xe0\x46\x7e\x62\x6e\x02\xcb\x25\x63\x4f\x66\x6f\x7e\xf2\xf2\x18\x5c\xd7\x9d\xa3\xd0\xe5\xcb\xf3\xf1\xab\xe3\x02\x85\x54\x20\xb7\x15\x8a\x07\x51\x07\x47\xfc\x2e\x8d\x2c\x46\x87\x85\x65\xa4\x17\xce\xc2\x75\xa3\xe9\xd1\xc6\x08\xfd\x39\x86\x16\xa4\xd4\x09\x4d\x91\xcd\x04\xd9\xd3\x2d\x3a\x9c\xa7\x8a\xdb\xf6\x3d\x62\xcd\x8c\x27\x1e\xc3\xb8\xf2\x79\x2b\x89\xa2\xbc\x14\x63\xe9\xf5\x15\x46\x87\x8b\x5a\x7d\x7a\x95\x6e\xf8\x9b\xf2\x4f\xde\x7e\x9a\x1c\x9f\x29\xc9\xb7\xfb\x81\xc7\x71\x79\xd5\x97\x69\x4a\x9a\xb8\x0a\xfe\x3e\x71\x1f\xea\xb8\xf1\xe1\xeb\xcb\xd3\x0f\x2a\x64\xd1\xe1\x1e\x64\xb3\x78\x0b\xe3\x24\xe2\xb0\xb3\x7b\x9f\xdf\x96\xd2\x64\x41\xc3\x09\x22\xd7\xdb\x68\xee\xbb\xbb\x85\x29\x6c\x7e\x86\xa1\xb7\x3e\x43\xd9\x29\xc0\x2e\xb2\x1c\xc5\xad\x45\x34\x46\x2b\x2f\x7e\xb1\xd2\xa5\xea\xfb\x96\x00\xb2\xaf\xf5\x50\x3a\x14\x74\x8a\x74\x49\x35\x9b\x2a\x1a\x55\x79\x4d\x41\x39\x7c\xb7\x62\x28\x2c\x8c\xd9\x16\xfb\x8f\x39\xc3\xe0\xe6\x40\xd0\x86\xc2\x54\x7c\xe5\x82\x2a\x78\xfd\x3e\x92\x40\x73\x86\x23\xd6\xed\xab\x49\xa2\x37\x88\x3c\xe0\x3a\x63\x33\x35\x6f\x95\xe7\xb3\x8b\xc9\xd1\xb4\x3c\x6b\x34\x21\x73\xcc\xba\xc0\xd4\xe0\x94\x7b\x91\xf8\xf9\xf0\xeb\x2f\x4b\x75\xc1\x69\x3d\x88\x41\x12\xe7\xae\x04\x3f\x27\xf4\xb3\x5d\x38\x51\x24\x25\x6d\xae\xfc\xa0\x56\xba\x92\x07\x5a\xac\xe8\xd7\x00\x00\x00\xff\xff\x6e\x95\xb8\xfc\xca\x09\x00\x00")

func assetsTplCurdTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplCurdTpl,
		"assets/tpl/curd.tpl",
	)
}

func assetsTplCurdTpl() (*asset, error) {
	bytes, err := assetsTplCurdTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/curd.tpl", size: 2506, mode: os.FileMode(420), modTime: time.Unix(1608619003, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplCurdTpl2 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6f\x6f\xdb\xc6\x19\x7f\x4d\x01\xfa\x0e\xcf\x84\xc2\x20\x63\x81\xf6\xda\x61\x2f\x02\x28\x85\x2d\xc9\x8d\x30\xc7\x4e\x24\x7a\xc3\x60\x04\x06\x45\x9e\x12\xce\xd4\x51\x3e\x9e\x6c\x19\x04\x81\x14\xd8\xd0\x04\x68\xba\xbe\x58\xd2\xa2\x0b\xb6\xa5\x68\x87\x62\x40\x9a\xbc\xd8\xb0\xbe\x18\xb0\x2f\x13\x29\xf9\x18\xc3\x73\x3c\x4a\x94\x44\xc9\xa4\xed\x04\xc1\x10\x07\x81\x4d\xf2\xf8\xfc\xfb\xfd\x9e\x3f\x77\xe4\xa7\x3d\x02\x41\xa0\xb7\x38\xeb\x5b\xdc\x30\xdb\x2e\xd9\x31\xbb\x24\x0c\x6f\x78\x36\x71\xc1\x17\xb7\x21\x28\x16\xea\xc5\x42\x6d\x13\xae\xf8\x47\xae\x5e\xdb\x2c\x16\x8c\x41\xf4\xb7\x31\x28\x16\xc2\x62\xa1\x58\x58\x5b\x03\xea\x71\xe0\xcc\xa4\xbe\x69\x71\xc7\xa3\xc5\x42\xa7\x4f\x2d\xd8\x21\x27\x69\xf2\x55\xbb\x0d\xba\xae\x4b\x81\x1a\x5c\x59\x6c\x44\x50\x2c\x38\x1d\x70\x09\x55\xed\xb6\x06\xd7\x60\x1d\xef\x00\x00\x30\xc2\xfb\x8c\xc2\xca\xc2\x57\xe5\x3a\xfc\xa9\x6d\x5e\x05\xbb\xbd\xbf\x7e\xbb\x1c\xdd\x0b\x85\xdd\x59\x25\xe0\xdb\x5d\xd3\xe7\x84\xd5\x36\xcb\xe2\xcd\x50\xb8\x9c\x70\x17\xbc\xf6\xef\x88\xc5\x97\x7b\x6d\x0c\x54\x3e\x8e\xdc\x59\x4e\x2b\x59\xac\x53\x14\x63\x70\x15\xf8\xa0\x5c\x2c\x28\xa1\xc4\x22\xfe\xb7\xb6\x06\xaf\xbf\xf8\xf7\xf0\x8f\x8f\x47\x0f\xee\x8d\x9e\x3c\x78\xf5\xcd\xef\x5f\x3f\xfd\x61\xf8\xec\xab\xd1\x8f\xff\x92\x66\xaa\xdd\x25\x36\x68\x70\x87\xf0\xaa\xe7\xf6\xbb\xd4\x57\x35\xe4\x82\x43\xef\xa0\x61\xd2\xae\x12\x12\x67\xc3\x75\xb7\x1c\xe2\xda\xdb\x8e\xcf\xc3\x10\x4a\x13\x3a\x44\xaa\x87\xdf\x7d\xf3\xfa\xe9\xe7\xa3\x47\x2f\x46\x0f\x7f\xd4\x33\x6b\x6d\x7a\x27\xbe\xea\x1f\xb9\xc6\x80\x4b\xbd\x65\xe8\x99\xcc\xec\xfa\x48\x1a\x87\x72\xc2\x3a\xa6\x45\x82\x50\x03\x95\x79\x27\x7e\x93\xf8\x7d\x97\xc3\xfe\x6d\x94\x7b\xf3\xf0\x4e\x9d\x72\x87\x9f\x86\x61\x9a\x96\x32\x10\xc6\xf0\xbf\xc7\x34\xf4\xe6\xa8\x4f\xd8\x69\x74\xf3\x6a\x05\xba\x7a\x6d\x53\xbf\x85\xb7\xa4\xfe\x58\xb1\xae\xeb\x9a\x20\x22\x2e\xfc\x59\x05\xa8\x23\x40\xc2\x2b\x7c\xab\xae\xb7\xb8\x69\x1d\xaa\x84\x31\x2d\x8e\x90\x88\x85\x4d\x3a\x84\x81\x50\xa2\x57\x5d\xcf\x27\xaa\x56\x2c\x74\xbc\xf8\xd6\x0e\x19\x70\x55\xd8\xc1\xbc\x13\x34\x60\xce\x81\x9d\xbe\xeb\xce\x39\x11\x84\xb1\xea\x48\x4c\xcb\x32\xa9\x5a\x2c\x04\x01\x33\xe9\x1d\x02\xe2\x25\x81\x8b\xdf\xa0\x1d\x2f\x0c\x57\x98\x77\xa2\x07\x81\x7e\xbd\xdf\xed\xc9\x30\xac\xad\xa1\xae\xaa\xd7\xed\x12\xca\xc3\x10\x5f\x26\xd4\x0e\xc3\x34\x2f\x31\x07\xd2\x3d\x9d\xe4\x61\x94\x50\x13\x30\x2a\x60\xf6\x7a\x84\xda\x09\x80\xca\x82\xcb\x67\xe0\x13\x2c\x71\x23\x08\xd0\xb4\x23\xd0\x3f\xf1\x0c\xac\x5c\xa5\x8e\xeb\x99\xfc\x97\xbf\x28\x09\x51\x13\xe7\xae\xce\xb9\xab\x6f\x45\x2b\x53\xdd\x76\x7d\x02\x33\x82\x1d\x9a\x4d\x6c\x83\xe6\x10\xca\x9d\x2e\xd1\x0d\xa7\x4b\x32\x08\xc6\x65\x39\x8c\xfd\xe8\xc3\x6c\xc6\x7e\xf4\xe1\x22\xa1\x67\xbf\xde\x8a\x32\x71\x11\x71\xe4\x2f\x24\x50\x38\x95\x02\xc9\x72\xf0\xf0\xd1\xb8\x1c\xe4\xa9\x06\x22\x19\x49\xb6\x6a\x20\xf9\x77\xde\x52\x30\x5d\x05\x12\xba\xa7\x2b\xc1\xbb\x9c\xae\x67\x16\xa5\x49\x94\x2a\xef\x40\x4a\xc2\xfb\x9c\x7c\xd3\x39\x39\x9f\x8f\x07\xa3\x3f\xff\x73\xf4\xf8\x45\x9e\x54\x6c\x99\xc7\x64\xb6\x2b\x1f\x9b\x6e\x9f\xcc\xa7\x61\x1b\xda\x9e\xe7\xce\xe6\x97\xcf\xbb\x7c\xba\xd3\xde\x64\xa4\x67\xb2\x58\xea\x05\x1a\x2c\x8a\x9e\xf4\x57\x26\xdb\x8d\x54\x25\x1e\xd6\x07\xc4\x52\x85\xb9\xe7\x6d\xe5\xc7\x26\x03\xb3\xd3\x21\x16\xaf\x7a\x7d\xca\x41\xf0\xb1\x58\x48\xdc\x2a\xcb\x2e\x19\xe9\xd7\x71\x8c\xd9\x10\x4f\x89\xad\x9e\x4b\x65\x1b\xdb\x68\x42\xe5\x35\x58\x9f\x81\xf2\x22\x60\x1a\x83\xcb\x84\xd3\x18\xbc\x87\xf3\xc2\x70\xae\xad\xc1\x86\x6d\x4b\x08\x37\x6c\x5b\xb5\xf8\x00\x2c\x8f\x72\x32\xe0\x7a\x35\xfa\x1d\xc3\x94\xa1\xc3\x69\xaa\x6b\xfa\xbc\x61\x47\xce\xcd\x02\x88\xc3\x9b\x7f\xe4\x62\x4c\x4b\x8d\x9d\x56\xbd\x69\x40\x63\xc7\xd8\x85\x12\xac\xca\xc6\x26\x44\x09\xd1\x7b\xbd\x1e\x61\x09\xc9\xb0\x0a\x25\x50\x83\x40\x6f\x50\x9f\x30\x9e\xd8\x04\x68\xf0\xeb\x8d\xed\xbd\x7a\x2b\xf1\xf4\x86\xc9\x0e\xc3\x50\x2b\x45\x2a\x8f\x50\xa1\xdd\xd6\x5b\xb7\xb6\xa3\xc7\x6a\x69\x75\x4a\xdd\x6a\xa9\x8c\x76\x8d\xc7\x4b\x7f\x0c\xbd\xe5\x51\x2a\xa0\x97\xa1\xc0\xf0\xc8\x1d\xdd\xb8\x43\x45\x32\xa3\xee\x14\x11\xe4\x8c\x4e\x0a\x99\x7e\x26\xfd\x16\xaf\x52\x47\x64\x45\x89\xb1\x14\x57\x52\xb4\x53\x86\x83\x88\x44\xfa\x36\x82\x11\x99\x27\x18\x34\x33\x3d\x4b\x02\x8c\x1e\xbf\x18\x7e\xfb\x97\x97\xff\x7d\x3a\xfa\xf4\x79\xb6\x64\xae\x32\x62\x72\xa2\x66\xa7\x05\x2c\xe5\x85\xe5\x51\x9f\x43\x3c\x72\xbd\x3d\x72\x2c\xef\x0f\xe4\x6d\x54\x94\xc4\xa4\x93\x9b\x47\x17\x99\xc8\x22\x38\x66\x0a\xce\x2c\x5d\xce\x31\xe8\xcd\xd4\x96\x24\xb5\x80\x0f\xf2\xb0\xcb\x18\xfc\xbf\xf1\x6b\xa6\x61\xbd\xe7\xd7\x25\xf0\x2b\xf7\x1c\xb2\xd7\xb3\xf3\x96\xae\xf4\x69\x64\x8e\x54\x7b\x37\x6b\x1b\x46\x3d\x3b\x9f\x5a\x75\x03\xc4\x33\x34\x28\x79\xa8\xf5\x9b\xeb\xf5\x66\x5d\xc8\x60\x4e\xd7\x64\xa7\xbf\x22\xa7\x61\x08\x15\xf8\xb8\x54\x2c\xc8\x7d\x28\xf2\xc9\x3c\x24\xea\xfe\xed\xc4\xe0\x54\x86\x75\x6d\x82\xf7\x07\x4e\x19\x3e\x38\x36\x45\xb7\x95\x4a\x50\xbe\x50\x14\x86\x52\xce\xf8\xd0\x24\xba\x2e\x43\x10\xe0\x3b\x02\x74\x09\xff\xf8\xfc\xad\xab\x8f\x07\xf2\xb9\xdd\x69\xa2\x99\x24\x10\xc9\x9c\xf1\x91\x79\x39\x33\xfe\x3d\x2c\x09\x58\xe4\x68\xbd\x0c\x98\xbf\x7e\xff\xfa\xf9\xb7\xc9\xf3\xd1\x6c\xd8\x6c\x39\xd4\x56\x35\x50\x19\xf1\xd1\xd0\xf3\x1d\x7a\xc6\x78\xe0\xe4\xd7\xaa\x6f\xd7\xab\x06\xe2\xd1\xd5\xa7\x4e\x7c\x57\xa1\xb4\xd5\xdc\xbd\x91\x09\x2a\x51\xf2\xd0\x9e\xf2\xf8\xa0\x30\x79\x8e\x1b\xd5\xd6\xcb\x3a\x13\xda\x72\x98\xcf\x55\x47\x76\x97\x28\x16\xe7\x3c\xf2\xb9\xf4\x40\x08\xce\x2e\xa4\x26\x6c\x37\x6e\x34\x0c\xf8\x79\x69\xba\x45\x4c\xc2\x35\x61\x8d\x63\x2f\x8c\xd8\xe8\xc9\xbd\xe1\x97\x5f\xbc\xfc\xe9\x5e\xce\xb8\x61\xbd\x57\xdf\xc1\x70\xed\x36\x6b\xf5\x26\x6c\xfe\x16\x1a\x35\xa8\xd5\x5b\xd5\xcc\x51\x4a\x89\xd0\xf0\xe1\xa3\xe1\xfd\xaf\xf2\x44\xe5\xa6\xdb\xb7\x0e\x53\xd8\xd4\x35\x7b\xfb\xe2\xd6\x74\xf1\x98\x0e\x88\x32\x57\xdf\xa2\xb0\xcc\x82\x5f\x16\x5f\xd9\x88\xe5\x51\x5b\x96\x16\xc8\x17\xa3\x93\xbb\x84\x91\x05\xd5\x4e\x61\xde\x89\xbf\xe8\x13\xc6\x84\x4c\xca\x5c\x7f\x57\x94\xf4\x0e\x3f\xd9\xc8\xe0\x26\x46\x89\x26\x1c\x54\x32\x99\x70\x14\x16\x1f\x20\x8a\x0a\x9b\x1a\x2c\x5c\x86\xbb\x6c\xb5\x58\x50\x70\xab\x73\x10\x07\x39\xbe\xc6\xba\x9b\x58\x5f\x2c\x28\xf8\x4a\xc7\x93\xca\x26\x1f\x47\x62\x43\xc5\x6d\x71\x7a\xba\x72\xe0\xd8\x65\x58\x41\x11\xc2\xe0\x14\xdf\x16\x7f\xb5\x50\x12\x0e\x0a\x0f\xa5\x37\xfb\x07\x8e\x7d\x1b\x2a\xc2\x30\xe9\xfb\x32\x7e\x41\xfb\x14\x46\x7f\x7a\x3e\xfa\xfc\xd3\xe1\xfd\xcf\x5e\x3d\xf8\xec\xe5\x7f\xfe\x36\xfc\xc3\xf7\x62\xd9\x27\x84\x83\x25\x32\x02\x6c\x93\x9b\x39\x98\xe8\xab\x8e\xed\x83\xe8\x58\xb9\xd9\x28\xb7\xcb\x19\x70\x91\x7b\x58\x97\x50\x54\xa7\x41\xa5\x32\xf9\xae\x9a\xdc\x95\xca\x6f\xa5\xca\x7c\xe2\xbf\x21\x86\x97\x60\x15\xf1\x28\xcd\x32\xdd\xa1\xa0\xa2\xa8\x26\xe9\x11\x93\xdf\xea\x13\x9f\x3b\x1e\xc5\xd9\x5e\x8d\x9d\x10\x95\x07\xe7\x7c\x65\x79\xfb\x1f\xaf\x97\x5c\x73\xec\x01\x66\x08\x2e\x8f\x66\x02\x04\x40\x30\x28\x92\xb3\xef\xd8\x03\x64\x85\x63\xc7\x9c\x38\x2b\xdd\x92\x1d\xff\x72\xb3\x2e\x4e\x27\x25\x99\x4b\xca\x1b\x4e\xa4\x85\xf6\x9e\x3b\x8b\xc6\x9d\xff\xe5\x4f\xff\x88\x6b\xb5\xcc\x1a\x8f\x92\x1c\x29\xb3\x4b\x49\x4a\xe9\x4e\xdd\x75\x66\xe0\xf0\x65\xd4\xe4\x8a\xa8\xc8\x71\xc4\x52\xbf\x23\x39\xb6\x26\x63\x1f\xd9\x3b\xcf\x92\x95\x95\xf8\xca\x3f\x72\xf5\x3a\x63\x3b\x1e\xce\x52\xc2\x8d\x65\x65\x6d\x8a\x40\xe9\x41\x8f\x66\x86\x71\xb8\x5d\x87\x12\xb0\xbc\x3e\xe5\x19\x0f\x03\x70\x29\x0e\x11\xd6\xe4\xd0\x74\xc1\xb9\xe2\x6c\xb0\xab\xbb\x7b\x3b\x86\x7a\x45\xcb\x1e\xe5\xe9\x2f\xcf\x29\xb1\x8c\xe3\x28\x8c\x49\x3d\x9a\x5b\x10\xc9\x44\xa9\x5b\xfc\x61\x3b\xa5\x10\xce\x9d\xd8\x61\x4b\xb8\xff\xdd\xe8\xf1\xb3\x88\xc6\xa3\xaf\x9f\x0f\xbf\xfc\xfb\xf0\xd9\xd7\xc3\x27\x3f\x88\x87\xd5\xbb\xc4\x3a\x04\x7e\x37\x22\x35\x38\x3e\xdc\x35\x8f\xc9\xc7\xd9\x82\x7d\xdd\xf4\x93\xec\x4e\xdf\x61\xbd\x25\x5e\xc7\xb3\x06\x56\x20\x2b\x79\x60\x7e\x06\x44\x49\xba\xe7\x86\x09\x2e\x8e\x93\x34\xf6\x1a\xac\x97\x51\x53\xb1\x10\xfe\x2f\x00\x00\xff\xff\x4b\x52\x4a\xa9\xf5\x24\x00\x00")

func assetsTplCurdTpl2Bytes() ([]byte, error) {
	return bindataRead(
		_assetsTplCurdTpl2,
		"assets/tpl/curd.tpl2",
	)
}

func assetsTplCurdTpl2() (*asset, error) {
	bytes, err := assetsTplCurdTpl2Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/curd.tpl2", size: 9461, mode: os.FileMode(420), modTime: time.Unix(1608545781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplCurdTpl_copy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xed\x6f\xdb\xc6\x19\xff\x2c\x02\xfc\x1f\x9e\x11\x85\x41\xc6\x02\xe5\xd5\xc3\x3e\x04\x50\x0a\x5b\x92\x13\x61\x7e\x49\x2c\x7a\xc3\x60\x04\x06\x45\x9e\x1c\xce\x7c\x91\x8e\x27\x5b\x06\x41\x20\x05\x36\x34\x01\x9a\xae\x1f\x96\xb4\xe8\x82\x6d\x29\xda\xa1\x18\x90\x26\x1f\x36\xac\x1f\x06\xec\x9f\x89\x54\xff\x19\xc3\xdd\x91\x14\xf5\x4e\xca\x4e\xd7\x14\x46\x51\x38\x22\xef\x9e\xe7\xb9\xdf\xf3\x7b\x5e\xee\x8e\xe4\xbc\x8d\x20\x08\xd4\x06\xc1\x5d\x83\x68\x7a\xd3\x46\xbb\xba\x83\xc2\x70\xc7\x33\x91\x0d\x3e\x7b\x0c\x81\x28\xd4\x44\xa1\xba\x09\x37\xfc\x8e\xad\x56\x37\x45\x41\xeb\xf1\x7f\x6b\x3d\x51\x08\x45\x41\x14\x4a\x25\x70\x3d\x02\x04\xeb\xae\xaf\x1b\xc4\xf2\x5c\x51\x68\x75\x5d\x03\x76\xd1\xd9\x34\xf9\xb2\xd9\x04\x55\x55\x23\x81\x0a\xdc\x98\x6d\x44\x20\x0a\x56\x0b\x6c\xe4\xca\x66\x53\x81\x5b\xb0\x46\x9f\x60\x44\xba\xd8\x85\x95\x99\xd3\x02\x6a\xf0\x4d\x30\x9b\x87\x6b\xf7\x8b\xcc\xc8\x30\xfb\x2c\x47\xf7\x09\xc2\xd5\xcd\x64\x62\xa9\x94\x5e\x1a\x78\xcd\xdf\x21\x83\xcc\x5f\xa1\xd6\x93\x49\x82\xd2\xa2\x05\x66\x31\x4c\xeb\xdd\x04\xd2\x4b\x4c\x1a\xfe\x57\x2a\xc1\xc5\x27\xff\xee\xff\xf1\xd9\xe0\xf1\xc3\xc1\xf3\xc7\xdf\x7f\xf1\xfb\x8b\x17\xdf\xf4\x5f\x7e\x36\xf8\xf6\x5f\x91\x89\xb2\x33\x47\xbf\x02\xc7\x88\x54\x3c\xbb\xeb\xb8\xbe\xac\x50\x9f\x5b\xee\x71\xca\x28\x89\x12\x64\xc3\xb6\xb7\x2c\x64\x9b\xdb\x96\x4f\xc2\x10\xa4\xa1\xdb\xb9\xea\xfe\x57\x5f\x5c\xbc\xf8\x78\xf0\xf4\xf5\xe0\xc9\xb7\x6a\x66\xad\xfb\xde\x99\x2f\xfb\x1d\x5b\xeb\x91\x48\x6f\x11\xda\x3a\xd6\x1d\x9f\x92\xc3\x72\x09\xc2\x2d\xdd\x40\x41\xa8\x80\x8c\xbd\x33\x7f\x1f\xf9\x5d\x9b\xc0\xe1\x7d\x2a\xf7\xee\xc9\x71\xcd\x25\x16\x39\x0f\xc3\x69\x5a\x8a\x80\x30\xa6\xff\x7b\x58\xa1\xab\xe9\x74\x11\x3e\xe7\x0f\x6f\x96\xc1\x51\xab\x9b\xea\x3d\xfa\x28\xd2\x1f\x2b\x56\x55\x55\x61\x84\xa3\x03\x7f\x56\x06\xd7\x62\x0e\xa2\xbf\xe8\xac\x9a\xda\x20\xba\x71\x22\x23\x8c\x95\x18\x21\x86\x85\x89\x5a\x08\x03\x53\xa2\x56\x6c\xcf\x47\xb2\x22\x0a\x2d\x2f\x7e\xb4\x8b\x7a\x44\x66\x76\x60\xef\x8c\x1a\x30\xb1\x80\xdd\xae\x6d\x4f\x2c\x22\x08\x63\xd5\x5c\x4c\xc3\xd0\x5d\x59\x14\x82\x00\xeb\xee\x31\x02\x36\x89\xf9\xc5\xaf\xbb\x2d\x2f\x0c\x57\xb0\x77\xa6\x06\x81\x7a\xa7\xeb\xb4\x23\x18\x4a\x25\xaa\xab\xe2\x39\x0e\x72\x49\x18\xd2\xc9\xc8\x35\xc3\x70\xa9\x55\xa6\x9c\x50\x06\xbd\xdd\x46\xae\x99\x72\x4c\x91\x11\x78\x81\x5f\x82\x39\xe6\x07\x01\x35\xa9\x03\xea\x6d\x4f\xa3\x99\x49\x6a\xd9\x9e\x4e\x7e\xf9\x0b\x89\x89\x1a\x2e\xea\xe6\xc4\x32\xd5\x2d\x3e\x72\xea\x72\x6d\x1f\xc1\x98\x60\xcb\xcd\x26\xb6\xee\xe6\x10\x4a\x2c\x07\xa9\x9a\xe5\xa0\x0c\x82\xe9\xb0\x1c\xc6\xae\xbf\x9f\xcd\xd8\xf5\xf7\x67\x09\x5d\x3c\xbd\xc1\x23\x70\x16\x61\xa2\x3f\x94\x38\xe1\x08\x29\xd2\x69\xe0\xc9\xd3\x24\x0d\xe4\xc9\x02\x2c\x08\x51\xb6\x2c\x10\xf1\x6f\xd9\x14\x30\x1a\xfd\x29\xdd\xa3\x19\xe0\x5d\x0f\xd3\x24\x4a\xff\xff\x21\x09\xd7\x31\xf9\xb6\x63\x72\x32\x1e\x8f\x06\x7f\xfe\xe7\xe0\xd9\xeb\x3c\xa1\xd8\xd0\x4f\xd1\x78\x35\x3e\xd5\xed\x2e\x9a\x0c\xc3\x26\x34\x3d\xcf\x1e\x8f\x2f\x9f\x38\x64\xb4\xc2\xde\xc5\xa8\xad\xe3\x58\xea\x25\x0a\x2b\x15\x3d\xac\xab\x38\x2a\x37\x91\x2a\xf6\xb2\xd6\x43\x86\xcc\xcc\x5d\xb6\x84\x9f\xea\x18\xf4\x56\x0b\x19\xa4\xe2\x75\x5d\x02\x8c\x8f\xa2\x90\x7a\xc4\x35\x96\x81\xeb\x57\x69\xfb\xb2\xc1\xde\x22\x53\x5e\x4a\x65\x93\x96\xd1\x94\xca\x5b\xb0\x36\xe6\xca\xcb\x38\x53\xeb\x5d\xa5\x3b\xb5\xde\xb5\x3b\x2f\xed\xce\x52\x09\x36\x4c\x33\x72\xe1\x86\x69\xca\x06\xe9\x81\xe1\xb9\x04\xf5\x88\x5a\xe1\x7f\x63\x37\x65\xa8\x70\x8a\x6c\xeb\x3e\xa9\x9b\x7c\x71\x13\x0e\xec\xd8\x14\x4f\xa9\xbe\xdb\xa8\xed\x6b\x50\xdf\xd5\xf6\x40\x82\x55\x9a\x4a\x52\x32\x60\x15\x24\x90\x83\x40\xad\xbb\x3e\xc2\x24\xd5\xe6\x2b\xf0\xeb\x8d\xed\x83\x5a\x23\xf5\x76\x47\xc7\x27\x61\xa8\x48\xa2\x60\x78\xae\x4b\xa5\x9b\x4d\xf5\x36\x22\x74\x1d\x45\x90\x0c\xcf\xb1\x0c\x49\x11\x85\x4e\xf4\xaa\x71\x6f\x9b\x4f\x94\xa5\x55\xbe\x1c\xa6\x39\x0c\x57\xa5\x22\xf8\x1d\x9b\x7b\x3f\x71\x3d\x15\xca\x5c\x1f\x41\xc1\xc4\xa6\xaa\x13\x97\xc5\x2b\x13\x27\xc7\xf2\x55\x34\xe5\x17\xab\x08\x47\x9c\x07\xea\x36\xc5\x93\x6b\x31\x65\x65\xd2\x7b\x55\x64\x47\xde\xab\x22\x7b\xba\xf7\xce\x1e\x20\x8c\x92\x90\xd3\xf1\xb1\x0f\x87\xf7\x47\x03\x6e\xd4\x4f\x85\xd8\x51\x26\xb2\x11\x41\xd0\xc2\x9e\x33\xdd\x51\x4c\xb4\x28\x14\xe6\x83\x5f\x48\xa1\x5f\x65\x22\x65\x69\x52\x58\xe2\x00\x51\x28\x1c\xc5\xa1\x60\x4c\xa0\x0f\x9d\x22\x58\x26\x1f\x36\x81\x61\xa1\x10\xe3\x53\x48\xef\x4a\x4b\x25\x18\x3c\x7b\xdd\xff\xf2\x2f\x6f\xfe\xfb\x62\xf0\xe1\xab\x6c\x19\xab\x82\x91\x4e\xd0\xfa\xfa\xba\x9c\x9d\xfe\x30\x97\xff\x86\xe7\xfa\x04\xe2\xd6\x72\x7a\x20\x0c\x19\x19\x04\xea\x41\xbb\x8d\xf0\xe5\x43\x63\x7e\x1d\x44\x3f\x44\xe6\x7c\x4b\x31\xb3\xd0\x48\xee\x8e\xb1\xc4\x3a\x1e\x53\x4b\x34\xb4\x63\x51\x98\x66\x17\x90\x5e\x1e\x82\x69\xbd\x9f\x1a\xbf\xc6\x0a\xf3\x35\xbf\x2e\xc9\xaf\xeb\x1d\xed\xf5\x8e\xf6\x7a\x47\xfb\xa3\xdb\xd1\x1e\xa3\xf8\xc4\x3d\x6a\x79\x26\x3b\xaf\xf1\x98\x1b\xef\xbd\x78\xb8\xe5\x0d\xb4\x20\x57\xc3\xd5\x40\x36\x32\xc8\xec\x86\x2b\xca\xcf\x54\x66\x12\xb0\xe3\xfd\x16\xb5\x9b\x06\x6d\x1c\x76\x85\xc2\xa5\x02\x8f\x4e\x8f\x43\xaf\x50\x50\x16\x37\x72\xa3\x89\xb0\xdb\x36\x75\x82\x22\xec\x0f\xd8\x8f\xe9\xf0\xb7\x98\x5d\x09\xfa\xb9\xfa\xe0\x74\x1b\xcc\x15\xce\xda\xaa\xf8\x88\xd0\x57\xd4\xe6\x48\x21\x7d\x2a\x2d\xd5\x1d\x2f\x72\x96\xb2\xb8\x37\x8e\x7d\x95\xb1\x3d\x66\x20\xd2\x1a\x7f\x05\x7b\x87\x74\xbb\x9d\xfb\x80\x20\x72\x64\x9e\x5e\x68\xfa\x31\xc1\x44\x17\x74\x70\xb7\xba\xa1\xd5\xb2\x37\x40\x8d\x9a\x06\xec\x1d\x35\x28\x7d\xcb\xf4\x9b\x3b\xb5\xfd\x1a\x93\x81\x2d\x47\xc7\xe7\xbf\x42\xe7\x61\x08\x65\xf8\x40\x12\x85\xa8\x9c\xd2\xd2\xa7\x9f\x20\x79\x04\xa4\x22\xac\x29\xc3\x02\xf0\x9e\x55\x84\xf7\x4e\x75\x46\xad\x48\x09\x95\xcf\x14\x85\x61\x24\x27\xb9\xcd\xe0\xbf\x8b\x10\x04\x74\x0e\x0b\x99\x28\x78\x92\x0b\x31\x47\x4d\x4e\xca\x26\x8a\x6c\x38\xd5\x23\x99\x5b\x54\x6e\x5e\xce\x16\xf5\xda\x2d\x29\xb7\x44\x67\x5e\xf3\x1c\xf3\xd7\xaf\x2f\x5e\x7d\x99\xbe\xb0\xcc\xe6\x9b\x2d\xcb\x35\x65\x5a\x41\x90\x4f\x0d\x5d\xee\x16\x32\xf6\x07\x4d\x73\x8d\xda\x76\xad\xa2\x51\x7f\x38\xea\xc8\x15\xec\x2a\x48\x5b\xfb\x7b\x3b\x99\x5c\xc5\x7a\x74\x6a\x4f\x9c\xa5\x98\xac\xe4\x62\x95\x17\x9b\xab\xba\xac\xd9\xb2\xb0\x4f\x64\x2b\xda\x0e\x71\x2c\x96\xec\x5c\xaf\x1c\x08\xc6\xd9\x99\xd4\x84\xed\xfa\x4e\x5d\x83\x9f\x4b\xa3\x7b\x9a\x21\x5c\x43\xd6\xb0\xc3\x8e\xe9\x88\x0d\x9e\x3f\xec\x7f\xfa\xc9\x9b\xef\x1e\xe6\xc4\x8d\x6e\x50\xe4\x1f\x21\x5c\x7b\xfb\xd5\xda\x3e\x6c\xfe\x16\xea\x55\xa8\xd6\x1a\x95\xcc\x28\x4d\x41\xa8\xff\xe4\x69\xff\xd1\x67\x79\x50\xb9\x6b\x77\x8d\x93\x29\x6c\x72\xf4\xf6\x21\x7b\x34\x9a\x3c\x16\xa4\x37\x8e\xca\xb8\xef\x8b\xec\xeb\x16\x64\x78\xae\x19\x65\x16\xc8\x07\x11\x2f\xc8\xd3\x93\x1d\xf6\xce\xfc\x59\x5f\x14\x0c\xa9\xb4\xec\x4e\x9c\x4a\x1f\xdf\x89\x43\x94\x57\xa7\x42\xa4\xf0\x33\x6f\x59\x14\x8e\x62\x50\x45\xe1\x88\xa6\xd8\xd4\x20\x51\x88\xbe\x4b\x60\xe2\x87\x9f\x25\x44\x1b\x6a\xfa\x90\x35\x9d\x2b\x47\x96\x59\x84\x15\x3a\x7d\xc9\x1d\x35\xb5\xf7\xf0\xc8\x32\xef\x43\x19\xa8\x98\xa9\x07\x39\x69\xd6\x40\xf3\x1c\x06\x7f\x7a\x35\xf8\xf8\xc3\xfe\xa3\x8f\xbe\x7f\xfc\xd1\x9b\xff\xfc\xad\xff\x87\xaf\xd9\xb0\xdb\x88\x80\xc1\x78\x0e\xa6\x4e\xf4\x1c\xfc\xf2\x65\xcb\x8c\x7a\xa8\xdc\x1c\xcb\x86\x79\xf4\x71\x92\x65\xfa\x0a\x94\xcb\xe9\xcf\x93\xd8\x32\x27\x23\xf7\x2d\x71\x94\xf5\xc4\xd2\x38\x53\x2d\x17\x64\x2a\x68\x1f\xb5\x91\x4e\xee\x75\x91\x4f\x2c\xcf\xdd\xd1\xf1\x89\x1c\x5b\xcd\x12\x87\xb2\xb0\x78\x27\xc3\x39\x7f\x2c\xb3\x47\x09\x4e\x47\xf3\x82\x4e\x71\x0e\x62\x21\x87\x96\xd9\xa3\x8e\xb7\xcc\xe4\xbb\x91\xb9\x91\x72\x15\x1f\xdf\x8c\x06\xcc\x3b\x17\x0a\x49\x51\x7e\xf3\xdd\x3f\xe2\x34\x1a\x51\xdf\x73\x51\x0e\xde\xef\xb9\x68\x4a\x56\x9d\x75\x43\xb4\x80\x9c\x57\x91\x2e\xcb\x34\x59\xc6\x30\x4d\x3d\xa7\xb2\xcc\x68\xaf\xbb\xc2\xad\x9d\xc0\x79\x65\x25\xfe\xe5\x77\x6c\xb5\x86\xf1\xae\x47\x7b\x9c\xa5\x0e\x8f\x39\xd0\xbc\x84\x27\x10\xdb\x96\x8b\xc0\xf0\xba\x2e\xc9\x78\x98\x4c\x87\xd2\x9a\x6e\x0c\x2f\x17\x33\xa0\x5b\xd9\x3b\xd8\xd5\xe4\x1b\x4a\x76\x58\xe7\x22\x17\xa3\xc6\x8c\xc8\x0a\xda\x32\x98\xf5\x1f\x7d\x35\x78\xf6\x92\xd3\x72\xf0\xf9\xab\xfe\xa7\x7f\xef\xbf\xfc\xbc\xff\xfc\x1b\xf6\xb2\xf2\x00\x19\x27\x40\x1e\x70\x92\x82\xe5\xc3\x03\xfd\x14\x7d\x90\x0d\xc8\x3b\xba\x9f\x66\xeb\x8c\xab\xe8\x1f\x84\xa7\x51\x59\xa7\x99\xc3\x48\x5f\x19\x67\xa4\x6e\x2e\x27\xe4\x60\x6e\x64\xcc\x2d\x58\x2b\x52\x89\xa2\x10\xfe\x2f\x00\x00\xff\xff\x19\x01\xce\xaf\xb7\x2b\x00\x00")

func assetsTplCurdTpl_copyBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplCurdTpl_copy,
		"assets/tpl/curd.tpl_copy",
	)
}

func assetsTplCurdTpl_copy() (*asset, error) {
	bytes, err := assetsTplCurdTpl_copyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/curd.tpl_copy", size: 11191, mode: os.FileMode(420), modTime: time.Unix(1608607351, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplETpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x41\x6b\xd4\x4e\x18\xc6\xcf\x1b\xc8\x77\x78\xd9\xc3\x9f\xe4\x4f\x98\xdc\x2b\x9e\x34\xde\xdc\x83\x0a\x9e\x27\xf1\x4d\x36\x34\x9b\xd9\xbe\x33\x61\x95\x25\x07\x65\x29\x2b\x28\xf4\xa0\xd2\xed\xa9\x42\x29\x78\xb0\xf1\xb8\x4a\xc5\x2f\xb3\x93\x6d\x4f\x7e\x05\x99\x64\xe3\xb6\x2a\x0a\x82\xa7\xf0\x3c\x79\x92\xe7\xf7\x0c\x93\x8e\xc6\x82\x14\x38\xb6\xd5\xeb\x3f\xe2\x8a\x87\x5c\xa2\x2f\xf7\xb2\xbe\x6d\x19\x2b\x49\xd5\xb0\x08\x59\x24\x46\xfe\x78\x37\xf1\x91\x48\x90\xec\xdb\x96\x6b\x5e\xfb\x3e\xe8\xf3\x67\x7a\xb9\xd4\x67\x47\xab\x8f\xcf\x6d\x4b\x3d\x19\x23\x04\x20\x15\x15\x91\x82\xa9\x6d\x95\x26\x16\x17\x79\x04\x03\x9c\x04\x8e\x0b\xff\x07\xc6\xee\x11\xaa\x82\x72\xf8\x2f\x98\x96\x9b\x90\xef\xc3\xc5\xd9\x07\xfd\xf9\xb5\x3e\xde\xaf\x8f\xe7\x9b\xaf\x1c\x84\xc0\x85\xfb\x8a\x47\xbb\x0e\x12\x41\xd3\xef\xb6\x8f\xe6\x47\x69\x0c\xa1\x07\x88\xb0\x73\x13\x90\xa5\x72\x50\x64\x99\x49\xba\x37\x20\x6c\x02\x5d\x15\xa2\x6d\xf5\x4a\xc0\x4c\xe2\x75\xbf\x59\xc4\x1e\xa6\x6a\xb8\xa9\x41\xd7\x24\xb7\x58\x2d\xd0\xe5\x62\xa6\x97\xa7\xab\x2f\x6f\xeb\xa7\xd5\xcf\x70\x77\x65\xb2\xe5\xf3\x60\x24\x13\x73\x08\x69\x9e\xfc\x1d\x2b\xd1\xef\x61\x89\x8f\x1d\xc4\xa6\xe7\x8f\xb0\x10\x0b\x1a\x71\xf5\x4b\xe6\x3b\x57\xa1\xdb\xdc\x86\xdb\x03\x4e\x89\x04\xc6\x58\x9a\x2b\xa4\x98\x47\x38\x2d\xff\xd9\x98\xb8\x59\xd3\x02\xb4\xcd\x8c\xb1\x1f\x97\xcd\x4f\xea\x37\xef\xeb\xc3\x4a\x1f\x9c\xd6\x87\xd5\xfa\xdd\xa7\xf5\xd1\xec\xf2\xd5\xe2\xa2\xaa\xbe\x9e\xbf\xd0\xf3\xc5\x6a\xf9\x52\x9f\xcc\xd6\x07\xfb\xd7\xa6\x6e\xc9\xba\xcb\xe3\x84\x42\x64\x5e\xa7\x0c\x91\x9c\xa4\x2a\x1a\x1a\xa7\x91\x11\x97\x08\x72\x2f\x63\x01\xd1\x40\xdc\x13\x13\xe9\x75\xf2\x96\xc8\xf3\xdb\x22\xc7\xef\xc6\x83\xc7\x46\xee\x5c\x99\xa5\xa8\x40\xaf\x5b\xbd\xbd\xea\x31\xcf\x64\xe7\x97\xb6\xf5\x2d\x00\x00\xff\xff\x3e\xa9\x79\x47\x77\x03\x00\x00")

func assetsTplETplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplETpl,
		"assets/tpl/e.tpl",
	)
}

func assetsTplETpl() (*asset, error) {
	bytes, err := assetsTplETplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/e.tpl", size: 887, mode: os.FileMode(420), modTime: time.Unix(1608202696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplEntityTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xe5\xaa\xae\xd6\x0b\x49\x4c\xca\x49\x75\xce\xcf\xcd\x4d\xcd\x2b\xa9\xad\xe5\xe5\x2a\xa9\x2c\x48\x55\x80\x89\xd7\xd6\x2a\x14\x97\x14\x95\x26\x97\x28\x54\x83\x14\x17\x25\xe6\xa5\xa7\x2a\xa8\x64\xe9\x28\xa8\x64\x96\xa4\xe6\x2a\x58\xd9\x2a\xe8\xb9\x65\xa6\xe6\xa4\x14\xd7\xd6\x56\x57\x83\xc5\xf4\xfc\x12\x73\x41\xda\x20\x00\x26\x18\x52\x59\x00\x15\x84\x89\xb8\xe5\x17\xe5\x26\x96\xc0\x34\x2b\xa0\xa9\x0f\x4a\xcd\x4d\x2c\xca\x06\x39\xa7\xba\x3a\x35\x2f\x05\xc4\xa8\xe5\xe5\x02\x04\x00\x00\xff\xff\x1d\x85\xad\x27\xb0\x00\x00\x00")

func assetsTplEntityTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplEntityTpl,
		"assets/tpl/entity.tpl",
	)
}

func assetsTplEntityTpl() (*asset, error) {
	bytes, err := assetsTplEntityTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/entity.tpl", size: 176, mode: os.FileMode(420), modTime: time.Unix(1608619082, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplEntityTpl_copy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\x0a\xc2\x40\x0c\x45\xf7\x85\xde\x21\x8b\x2e\xa5\x07\x10\x5c\x09\x5d\x76\x21\xbd\xc0\x68\x83\x54\x67\x3a\x25\x4d\x29\x25\xe4\xee\x12\x75\xa4\x54\xc1\x59\x4d\x5e\xfe\x0f\x2f\xcf\x44\xca\xc6\x9d\x3d\x1e\x63\x08\xd8\xb3\x6a\x9e\xf1\x32\x20\x24\xae\x0a\x23\xd3\x74\x61\x10\x0b\x93\xeb\xaf\x08\xc5\x6d\x07\x45\xc7\x18\x60\x7f\x80\xb2\xea\xd0\xb7\xa3\xaa\xc8\x93\x95\xb5\x0b\x56\x7b\xbd\x04\x9b\x65\x78\xc3\x44\xaa\x48\xc1\x71\x2a\xc3\x26\x7f\xc2\xe0\xe8\x6e\x3a\x22\xd8\xb7\xf6\xd1\x2f\xdb\x7a\xf2\x7e\x6d\x6c\xf3\x1f\x6b\x8a\xf3\x56\x9a\xe2\xbc\x72\x4e\xc0\x4e\x7d\x9c\x61\xb5\xf9\x65\xf6\x08\x00\x00\xff\xff\x6e\x2e\x32\xff\x48\x01\x00\x00")

func assetsTplEntityTpl_copyBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplEntityTpl_copy,
		"assets/tpl/entity.tpl_copy",
	)
}

func assetsTplEntityTpl_copy() (*asset, error) {
	bytes, err := assetsTplEntityTpl_copyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/entity.tpl_copy", size: 328, mode: os.FileMode(420), modTime: time.Unix(1608619042, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplExampleTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x6d\x6b\xdc\x46\x10\xfe\x2e\xd0\x7f\xd8\x0a\xee\x22\x99\x8b\xe4\xd4\x49\x09\x82\xa3\xed\xbd\x84\x06\x92\xd4\xc5\x2e\xfd\x50\x4a\xd8\x93\xf6\xee\x16\x4b\xbb\xba\xdd\x55\x1a\xd7\x18\x2e\x50\x9a\x84\x24\x76\x20\x4d\x02\xad\xd3\x77\xf7\x85\x42\xed\x0f\xa5\x31\x97\x94\xfe\x19\x4b\x67\xff\x8b\x32\x92\xee\xcd\x75\x8a\x69\x09\xe4\xdb\xec\xec\xcc\xce\xcc\xf3\x3c\xb3\x11\xf6\x56\x70\x87\xa0\x70\x55\xf6\x02\x5d\xd3\x35\x1a\x46\x5c\x28\x64\xea\x9a\xe1\x63\x85\x5b\x58\x12\x47\xf6\x02\x43\xd7\x8c\x76\xa8\x0c\x5d\xbb\x8a\x8c\x0e\x55\xdd\xb8\x65\x7b\x3c\x74\x3a\xfc\xb4\xec\x05\xa7\x7d\x41\xaf\x11\xe1\x64\xaf\x40\xa8\x22\x52\x51\xd6\x01\x53\x2a\x41\x59\x47\x82\xc9\x88\x72\x62\x01\x01\x16\x94\x52\xab\x11\x41\x8d\x5a\x9d\xb3\x36\xed\x34\x99\xa2\x6a\x15\x49\x25\x62\x4f\xa1\x35\x5d\x7b\x87\x4b\x85\x10\x42\x79\x3e\x72\x9c\x64\x6b\x37\x79\xd2\xd7\xb5\x45\xe8\x0f\x21\x44\x99\x42\x8e\x33\xfc\x75\x27\xd9\xfc\x5e\xd7\xae\xe0\x90\xcc\x84\x0f\x3f\xff\x39\xbd\xf5\x54\xd7\x16\xb1\x94\xb3\xef\xec\x7c\x36\xfc\xe6\x86\xae\x35\x6a\x79\xce\xe4\x62\xf0\x20\xb9\x7f\x4f\xd7\xea\x5d\x2c\x24\x51\x53\x4f\x3d\x7f\x94\x65\x2c\xd3\x90\x7c\xc2\x19\x99\xdc\xa4\x8f\xff\x48\xee\x0e\x74\xed\x32\xbe\x7e\xd1\x0f\x48\xd1\x53\xba\xd5\x4f\x7e\xf8\x69\xf8\xcb\xe0\xf0\xf1\xef\x07\x7f\x7d\x95\x6e\x6c\x67\x11\xef\x46\x84\xcd\x44\xe4\x77\xe9\xc3\x5d\x5d\x5b\x07\x40\x1c\x07\x8d\x5d\xe9\xbd\xdf\x92\xc1\x03\x5d\x6b\xc7\xcc\x43\x17\x19\x55\x8d\x9a\xe9\xb5\x3b\x47\xf0\xb2\xd0\x9c\xec\x05\x76\xa3\x06\x88\xd1\x76\xd1\x98\xb4\x9b\xbd\x18\x07\x17\x78\xe0\x43\x8e\x3d\xea\xbb\x82\x0c\xc3\x82\xc8\x69\x27\xaa\x22\xe3\xd4\xdb\x92\x62\x67\xa9\x8b\x59\xa7\x8b\xe9\x29\x23\xeb\xc7\x97\x0c\xb9\x55\xd4\x0e\x95\xbd\x14\x09\xca\x54\xdb\x34\x4a\xd2\x2d\xc9\xb7\x94\x17\x99\x60\xf9\x96\x53\x92\x6f\x7a\x39\x5c\xd5\x92\x2c\x47\x60\xc1\xc3\x55\x25\x62\x52\x0e\xb8\x57\xbd\xc4\x3d\x1c\x94\x15\x0d\xc9\x55\xa8\x56\x2d\x49\xa3\x92\x37\x00\xe8\x17\x26\x70\x54\x98\x40\xfb\xc8\xcb\xc5\xc8\xcc\xb9\x2a\x0e\x05\x3f\x15\x5d\x8b\x45\x60\xbf\x17\x13\xb1\xda\x94\x1e\x8e\xc8\xcc\xb0\x56\x25\x93\x99\xc7\x19\x23\x9e\xa2\x9c\x55\x10\x11\x02\x26\x02\xc4\x80\x0b\xd3\xc8\xf5\x5a\x41\xbe\x64\x56\x86\x1f\x44\xbc\x56\x45\x8c\x06\x00\x53\x84\x19\xf5\x4c\x22\x84\x95\x01\x32\x79\xca\x5e\x22\xaa\x20\xb4\xce\x19\x93\x59\xe1\xc2\x61\x1d\x13\x08\xda\x98\x09\x04\x87\xa5\x6b\x82\xa8\x58\x30\x34\x89\xcf\xea\x5c\xc3\x02\x35\x6a\x23\x66\xf3\xf3\xda\x5a\x86\xd7\xfa\x7a\xa3\x85\xe6\xc6\x87\xcb\xdc\x27\xd9\xd6\x66\x2a\xa1\x8c\xaa\xfa\xf8\x29\x73\xc4\x34\x8c\x3c\xab\x9a\x62\xbb\x5c\x23\x00\x72\xba\x5c\x2a\xe0\x04\xe0\x76\x17\x16\xe6\xcf\x57\xf2\x6d\x72\x0d\xc1\x79\x7e\x83\xa5\x74\x8d\x33\xaf\x2f\x9c\x3d\xf7\x06\x9c\x73\x36\x5c\x63\x85\x32\x3f\x20\x3e\xb8\x0a\x4e\x5c\x23\x56\xed\xf3\x61\xeb\x2c\xf8\x0a\x40\xdc\x33\xf3\x95\xf1\x86\xb8\xe8\x5c\x25\x1b\xb2\x51\x43\xd5\x29\x5d\x5b\xba\x36\x3d\x62\x15\x5d\x21\x1f\x8f\x1d\x66\xa3\x66\x4d\x56\x24\xfd\x7a\xfb\x60\xe7\xbb\xf4\x76\x3f\xdd\xba\x3d\xfc\xe2\xd3\x7c\x57\x0a\x08\x96\x89\x54\xe3\xb4\x0b\x94\xf9\x1f\x74\x89\x20\xa6\x42\x73\xc5\x8f\x64\x2f\x67\xb0\x1c\x85\x4a\xd7\x5a\x9c\xaf\x00\x52\xe3\xec\x35\x28\xa6\xb8\xcf\xb3\xca\x82\xc8\x38\x50\x63\x09\x4d\xf5\x6a\x43\x19\xb3\x0c\xf9\x16\x7c\x22\x37\xff\x4c\x1f\xee\x1e\xde\xbc\x7b\xb8\xd5\x3f\xf8\xf1\x46\x7a\xe7\x79\xba\xb1\xbd\xbf\xd7\xdf\xdf\xbb\x93\xfd\xb0\xff\x10\x99\xb2\x9b\x42\x70\x31\x91\x19\x2c\xdc\x22\xec\x5b\xc0\xcc\xbc\xec\x87\xf3\x1f\xe5\x57\xf0\x41\x6c\x3c\x4d\x36\x1f\xc1\xff\x71\x7f\x63\x7f\xaf\x9f\x3e\xf9\xf6\xc5\x00\x5c\xc2\x52\x9d\x64\xf6\x7f\x1d\x4e\x48\x65\x32\x1a\x1c\xb7\x1f\x27\x68\xfd\x68\xdf\xfd\x67\x19\x3a\x9b\xc7\xb5\x5b\xe7\x31\x7b\x65\xfa\x4d\x6e\x7d\x99\x3c\x1b\xbc\x18\xdb\xba\x20\x58\x9d\x48\x59\xbe\xff\xdf\x74\x55\x54\x28\xfb\xfe\x4b\x9a\xa5\x79\x1d\x87\x51\x40\xde\x8f\xfc\x97\x3c\x49\x51\xe1\xff\x4d\xf2\x77\x00\x00\x00\xff\xff\x0f\x0d\x50\xf5\xaa\x08\x00\x00")

func assetsTplExampleTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplExampleTpl,
		"assets/tpl/example.tpl",
	)
}

func assetsTplExampleTpl() (*asset, error) {
	bytes, err := assetsTplExampleTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/example.tpl", size: 2218, mode: os.FileMode(420), modTime: time.Unix(1608202696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplInitTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x5d\x8b\xe4\x44\x14\x7d\xee\x40\xfe\xc3\x35\xd0\xb3\x89\x84\xce\x7c\xec\x2e\xd2\xd2\xb4\xf6\xcc\x8a\x82\xa3\xee\xce\xbc\x4b\x4d\x52\xe9\x2e\x36\xa9\xca\x54\x55\x86\x19\xa5\x61\x7d\x11\x1f\x5c\x15\x56\xdd\x97\x55\x04\x15\x15\xc1\xdd\x07\x51\x18\x04\x7f\x4d\xf7\xe8\xbf\x90\x5b\x55\xe9\x4e\xda\x1d\xf6\x29\xa9\x73\x4f\xdd\x8f\x53\xa7\x8a\x95\x95\x90\x1a\x42\xdf\xeb\x05\x19\xd1\xe4\x84\x28\x9a\xa8\xd3\x22\x40\x20\x2f\xb5\xf9\x72\xaa\x93\x5a\x5a\x4c\x69\xc9\xf8\x54\x05\xbe\x17\xf9\x9e\xef\x9d\x11\x69\x36\x97\x44\x69\x2a\x0f\x26\xf0\xb2\x3a\x2d\x06\x07\x13\xdf\xeb\xa9\x82\x9c\xd1\x36\x62\x36\xe4\x35\x4f\x81\x71\xa6\xc3\x08\x3e\xf4\xbd\x5e\x9a\x4f\x61\x38\x82\xec\x64\x5f\xf0\x9c\x4d\x11\xea\xbd\x29\x94\x1e\x02\x00\x04\x85\x48\x49\x31\x13\x4a\x07\x31\x06\xde\x13\xd2\x06\xf6\xf6\xb6\x6f\x1b\xe4\x1d\x52\x52\x4b\x95\x42\x34\x2c\xa2\x94\xc5\x76\x76\xf7\x6e\xde\xba\x6d\xd1\x83\x89\xe3\x06\xf7\x19\xcf\x0a\x9a\x59\x78\x7f\x46\xa4\xa2\x7a\x08\x41\xad\xf3\x57\xca\x93\x9b\x16\x3e\x24\xe7\xef\x56\x94\x0f\x61\x67\x7b\xbb\x01\xde\xca\x0a\x3a\x84\x5b\x66\x3d\x6f\xcf\x3c\x32\x03\x1d\x4c\xc2\x34\x9f\x46\xbe\xd7\x4b\x92\x66\xf6\x8d\xc8\x1c\x15\xd0\x17\x15\x5d\xcd\x0b\x4a\xcb\x3a\xd5\x46\x0a\x1c\x1b\xdb\x06\xab\x31\x24\xc9\xe2\xc9\xb3\xc5\x37\x0f\x7c\xcf\x0c\x6e\x42\x8c\x9b\x6f\x92\x5c\xfd\xfa\x74\xf1\xf9\xf7\xbe\x67\x14\xe8\xee\xba\xfa\xf2\xe7\xe5\x27\x7f\xe2\x2e\xa2\xd4\x46\xc2\xa7\x1f\x5f\x7d\xf7\x91\xef\x39\x35\x3a\xa1\xcb\x47\x8b\x2f\x1e\xfa\x5e\xa3\x48\x3b\xe1\x5f\x5f\xdb\x5d\xc7\xac\xa4\x1f\x08\x4e\xd7\xa1\xe5\xe3\x3f\x16\x9f\x5e\xfa\x5e\xa3\x4f\xab\xc3\xe5\x93\x07\x8b\x1f\x7e\xba\xfa\xe5\xf2\xdf\xc7\xbf\xff\xf3\xf7\xb7\xcb\xcf\x7e\xb4\x34\xd4\xf5\x7f\x34\x4b\x58\x7e\xf5\xcc\x89\x94\x24\xb0\x82\x96\x0f\x7f\x5b\x5c\x3e\x6a\x59\xc7\xea\xb9\xd2\x30\x6a\x2c\x66\x54\x64\xb9\xeb\x4e\x0d\xee\x9c\xd6\xa4\x78\x43\x14\x19\xd2\x07\x4d\xf3\x31\x04\x81\xf5\x5e\xaf\x0d\xc3\x08\x82\x1b\xaf\x2b\x46\x92\xa3\x19\xe1\xd3\x19\x61\x37\x02\x77\xd0\x99\xe2\xe8\xd1\xbc\xd4\x83\xa3\x4a\x32\xae\xf3\x30\xe8\xab\x61\x5f\xbd\xa6\xd3\x2a\xc4\xbf\x2c\x4a\xfa\x6a\x9c\x5a\xe5\x46\x7d\xb5\x55\xe1\x1f\xa6\x1e\x69\x59\xd3\xad\x42\xa4\xa3\xb7\xd1\xcb\x5b\x9a\x95\xf4\x7d\xac\x37\xea\x2b\x6b\x35\x6c\x02\x0f\x63\xb5\xc0\x63\x5b\x2d\xd0\x14\xeb\x88\x90\xeb\x85\x3d\xc2\xd5\xd2\x1d\x9b\x59\xd7\xb2\x18\xdc\xad\xa9\xbc\xb8\xa3\x52\x52\xd1\xce\xf8\x11\x32\xd0\xa5\x19\xcd\xa9\x04\x14\xd5\x5d\x45\x94\x8e\x4a\x89\xa3\x4a\x9a\x8a\x33\x2a\xc3\xe8\x55\x83\xbc\x34\x02\xce\x0a\x4b\x72\xac\x1d\xa4\x1d\xba\x1b\xb0\x5f\x08\x45\x1d\x79\xa7\xcb\xee\x55\x84\xb3\x34\xc4\x40\x64\x80\x79\x2b\xc9\x2e\x26\x39\xb2\x77\xa5\x9d\x63\xf7\xba\x1c\xbb\xed\x1c\x2b\xd4\x80\x88\xcd\x43\xfc\x4d\x05\xe7\x34\xd5\x4c\xf0\xb8\x99\x07\xfd\x81\xbe\x0b\x83\xf2\x02\x5f\xb7\x18\x32\xc5\x23\xeb\x96\xcd\x01\x3b\x69\xe7\x9d\x7c\x83\x23\xaa\x9d\x83\xf7\x05\xe7\xca\x08\xeb\x80\xe8\x79\x4c\xbc\x12\x1d\x26\x02\xc8\x94\x54\xd7\x92\xc3\x7a\x83\xf1\x7d\x92\x40\x8a\x32\x40\x76\xe2\xec\xbe\xa1\x30\x36\x2b\x64\xe3\xf3\xd5\x03\xd4\x6e\xdf\x65\x6e\x62\x03\xb7\xd3\xcd\xe2\xa2\x9c\x15\xd7\x14\xec\x9e\x46\xb7\x5e\xf3\xaa\x3d\xa7\x9c\x0b\xbd\xb0\x9a\x96\x84\x2b\x62\x26\x06\xa5\x89\xd4\xae\xec\xf1\xf9\x84\x4e\x19\x0f\x23\x08\xcd\x65\x3e\x3e\x8f\x6d\x6d\x6b\xcd\xcd\xa1\x1c\xb9\xc9\x2a\x69\x45\x89\x06\x49\x55\x25\xb8\xa2\xa0\x05\x8c\xe3\x71\x3c\x76\xc9\xef\x99\xf0\xdd\x9a\x2a\xac\x7b\x48\xe4\xfd\x30\x15\x35\xd7\xf8\x08\x45\xcd\x5b\xd6\x2a\xd3\xbc\x1f\xc7\x92\x95\xf7\xd8\x74\xa6\xc3\x06\xb1\x99\xc2\x60\x1c\x07\x31\x98\x1c\x51\x0c\x41\x1c\x60\x27\xff\x05\x00\x00\xff\xff\xe3\x1c\x96\xb0\x4b\x07\x00\x00")

func assetsTplInitTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplInitTpl,
		"assets/tpl/init.tpl",
	)
}

func assetsTplInitTpl() (*asset, error) {
	bytes, err := assetsTplInitTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/init.tpl", size: 1867, mode: os.FileMode(420), modTime: time.Unix(1608202696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplMarkdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x6a\xea\x40\x14\x86\xf7\x81\xbc\xc3\x81\xb8\x50\xb8\xc9\x03\x08\xf7\x6e\xae\x1b\xb9\x17\xeb\x42\xba\x11\x17\xb1\x9e\x16\x69\x92\x96\x68\xa0\x61\x66\xc0\x45\xa1\x85\xd2\xd6\x45\xc1\xac\x0a\x05\x11\xbb\xa8\x52\xda\x82\x98\x3e\x8e\x19\xf5\x2d\x4a\x66\x9c\xd4\x56\x9a\xc5\x84\xf9\xff\xc3\xf9\x4f\xbe\x13\xc3\x80\xd5\xc3\x98\xf7\x62\x3e\x3a\xd7\x35\x5d\xa3\xc9\xfc\x36\xb9\x1c\xd0\x54\x4d\xfa\xd7\x40\x61\x35\x7d\xe5\xd1\x0d\x50\x48\x86\x17\xfc\x65\x0c\x54\xd7\x68\xd1\x34\x4d\x71\xa8\x13\xe4\x4b\xd7\x08\xf1\x6d\xef\x08\xc1\xaa\xd9\x4d\x07\xff\xb7\x3b\x5d\xc6\x28\x10\x62\x95\xbd\x16\x9e\x31\x46\xeb\xe9\x45\x98\x15\xdb\x45\xc6\x1a\x79\xe3\xd3\xfd\x6a\x15\x40\x3e\x94\x10\xeb\xef\x89\xeb\xa2\x27\x9a\x89\x14\xf4\x5a\x8c\xa5\x03\xab\xc0\xdc\x31\x86\xbf\x20\xd7\xee\xa2\x0b\xc5\xdf\x60\x95\xb0\x73\x20\xe3\x75\xcd\x30\x0c\x20\x44\x78\x2a\xc9\x52\xf7\xad\x3c\x5d\xfb\x93\x95\x65\x79\x69\x86\x29\x68\x3c\x0d\xf8\xe4\x4d\xd2\x90\xa4\x84\x00\x14\x96\xcf\x71\x72\x7f\x05\x14\x78\x34\x4d\xfa\xa3\xc5\x6c\xbe\x7c\x9c\x53\x58\xc7\xd1\x6a\x32\x4c\x7a\xef\x99\xc3\xa3\xe9\x62\x16\xaf\xef\x26\xbb\x58\x15\x55\x73\x97\xed\x37\x61\x0b\xb2\x1c\x75\x03\x59\x40\x72\x02\xd7\x93\x1f\x03\x20\xb0\x4b\xa9\x16\x9e\x62\x25\x70\x9b\xe8\x33\x26\xf5\x72\xa7\x12\x38\xce\x66\x37\x25\x3c\xb4\x03\xa7\xbb\x6f\x3b\x01\xaa\x82\xaa\xdf\x76\x6d\x3f\xfc\x87\xa1\x52\x64\xab\x1f\x16\x51\xaf\xed\x55\x1b\x79\x23\xfb\x97\x0a\x99\xf7\x11\x00\x00\xff\xff\x54\x04\xaf\xad\x62\x02\x00\x00")

func assetsTplMarkdownTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplMarkdownTpl,
		"assets/tpl/markdown.tpl",
	)
}

func assetsTplMarkdownTpl() (*asset, error) {
	bytes, err := assetsTplMarkdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/markdown.tpl", size: 610, mode: os.FileMode(420), modTime: time.Unix(1608202696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTplTablesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xe5\x4a\xce\xcf\x2b\x2e\x51\xd0\xe0\xe5\xaa\xae\x2e\x4a\xcc\x4b\x4f\x55\x50\xc9\xd4\x51\x50\xc9\x2c\x49\xcd\x55\xb0\xb2\x55\xd0\xab\xad\x05\xc9\x80\xf9\x7a\xa1\x05\x05\xa9\x45\x21\x89\x49\x39\xa9\x7e\x89\xb9\xa9\xb5\xb5\x0a\x0a\x0a\x0a\xb6\x0a\x4a\x30\x69\x24\x19\x25\x05\x7d\x7d\x05\x98\xb8\x73\x7e\x6e\x6e\x6a\x5e\x49\x6d\x6d\x75\x75\x6a\x5e\x0a\xc8\x40\x4d\x40\x00\x00\x00\xff\xff\xf6\x4d\x87\xcf\x77\x00\x00\x00")

func assetsTplTablesTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTplTablesTpl,
		"assets/tpl/tables.tpl",
	)
}

func assetsTplTablesTpl() (*asset, error) {
	bytes, err := assetsTplTablesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tpl/tables.tpl", size: 119, mode: os.FileMode(420), modTime: time.Unix(1608202696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/tpl/curd.go":         assetsTplCurdGo,
	"assets/tpl/curd.tpl":        assetsTplCurdTpl,
	"assets/tpl/curd.tpl2":       assetsTplCurdTpl2,
	"assets/tpl/curd.tpl_copy":   assetsTplCurdTpl_copy,
	"assets/tpl/e.tpl":           assetsTplETpl,
	"assets/tpl/entity.tpl":      assetsTplEntityTpl,
	"assets/tpl/entity.tpl_copy": assetsTplEntityTpl_copy,
	"assets/tpl/example.tpl":     assetsTplExampleTpl,
	"assets/tpl/init.tpl":        assetsTplInitTpl,
	"assets/tpl/markdown.tpl":    assetsTplMarkdownTpl,
	"assets/tpl/tables.tpl":      assetsTplTablesTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("nonexistent") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"tpl": &bintree{nil, map[string]*bintree{
			"curd.go":         &bintree{assetsTplCurdGo, map[string]*bintree{}},
			"curd.tpl":        &bintree{assetsTplCurdTpl, map[string]*bintree{}},
			"curd.tpl2":       &bintree{assetsTplCurdTpl2, map[string]*bintree{}},
			"curd.tpl_copy":   &bintree{assetsTplCurdTpl_copy, map[string]*bintree{}},
			"e.tpl":           &bintree{assetsTplETpl, map[string]*bintree{}},
			"entity.tpl":      &bintree{assetsTplEntityTpl, map[string]*bintree{}},
			"entity.tpl_copy": &bintree{assetsTplEntityTpl_copy, map[string]*bintree{}},
			"example.tpl":     &bintree{assetsTplExampleTpl, map[string]*bintree{}},
			"init.tpl":        &bintree{assetsTplInitTpl, map[string]*bintree{}},
			"markdown.tpl":    &bintree{assetsTplMarkdownTpl, map[string]*bintree{}},
			"tables.tpl":      &bintree{assetsTplTablesTpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
